name: CI-Release

on:
  push:
    tags:
      - 'v*.*.*'

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
    steps:
      -   name: Checkout sources
          uses: actions/checkout@v2

      -   name: Install toolchain
          uses: actions-rs/toolchain@v1
          with:
            toolchain: ${{ matrix.rust }}
            override: true

      -   name: Run cargo check
          uses: actions-rs/cargo@v1
          with:
            command: check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
    steps:
      -   name: Checkout sources
          uses: actions/checkout@v2

      -   name: Install toolchain
          uses: actions-rs/toolchain@v1
          with:
            toolchain: ${{ matrix.rust }}
            override: true

      -   name: Install clippy
          run: rustup component add clippy

      -   name: Run cargo clippy
          uses: actions-rs/cargo@v1
          with:
            command: clippy
            args: -- -D warnings
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
    steps:
      -   name: Checkout sources
          uses: actions/checkout@v2

      -   name: Install toolchain
          uses: actions-rs/toolchain@v1
          with:
            toolchain: ${{ matrix.rust }}
            override: true

      -   name: Run test
          uses: actions-rs/cargo@v1
          with:
            command: test
            args: --color always -v
  security_audit:
    runs-on: ubuntu-latest
    steps:
      -   name: Checkout sources
          uses: actions/checkout@v2
      -   name: Security Audit
          uses: actions-rs/audit-check@v1
          with:
            token: ${{ secrets.GITHUB_TOKEN }}
  create_release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: softprops/action-gh-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
  build_release_windows:
    name: release_windows
    runs-on: windows-latest
    needs: create_release
    strategy:
      matrix:
        rust:
          - stable
        archive:
          - exe
    steps:
      -   uses: actions/checkout@v2
      -   uses: actions-rs/toolchain@v1
          with:
            toolchain: stable
            override: true
      -   uses: actions-rs/cargo@v1
          with:
            command: build
            args: --release
      -   uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ needs.create_release.outputs.upload_url }}
            asset_path: target/release/ssh-view.${{ matrix.archive }}
            asset_name: ssh-view-windows.${{ matrix.archive }}
            asset_content_type: application/binary
  build_release_linux:
    name: release_linux
    runs-on: ubuntu-latest
    needs: create_release
    strategy:
      matrix:
        rust:
          - stable
    steps:
      -   uses: actions/checkout@v2
      -   uses: actions-rs/toolchain@v1
          with:
            toolchain: stable
            override: true
      -   uses: actions-rs/cargo@v1
          with:
            command: build
            args: --release
      -   uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ needs.create_release.outputs.upload_url }}
            asset_path: target/release/ssh-view
            asset_name: ssh-view-linux
            asset_content_type: application/binary
  build_release_macos:
    name: release_macos
    runs-on: macos-latest
    needs: create_release
    strategy:
      matrix:
        rust:
          - stable
    steps:
      -   uses: actions/checkout@v2
      -   uses: actions-rs/toolchain@v1
          with:
            toolchain: stable
            override: true
      -   uses: actions-rs/cargo@v1
          with:
            command: build
            args: --release
      -   uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ needs.create_release.outputs.upload_url }}
            asset_path: target/release/ssh-view
            asset_name: ssh-view-macos
            asset_content_type: application/binary
